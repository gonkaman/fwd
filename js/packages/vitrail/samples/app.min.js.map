{
  "version": 3,
  "sources": ["app.js"],
  "sourcesContent": ["(() => {\n  // myLib.ts\n  var createDOMAdapter = (tagName, factory, connector, format) => (...args) => {\n    const tasks = format(connector)(args).map((entry) => entry[0]);\n    const build = (doc) => tasks.reduce((node, task) => task(node), factory(doc, tagName));\n    return (connect) => connect(build);\n  };\n  var textNodeFactory = (doc, _) => [doc.createTextNode(\"\"), doc];\n  var htmlNodeFactory = (doc, tagName) => [doc.createElement(tagName), doc];\n  var appendNodeConnector = (filter) => [\n    (entry) => {\n      entry[0].appendChild(filter(entry[1])[0]);\n      return entry;\n    }\n  ];\n  var prependNodeConnector = (filter) => [\n    (entry) => {\n      entry[0].prepend(filter(entry[1])[0]);\n      return entry;\n    }\n  ];\n  var noNodeConnector = (_) => [\n    (entry) => entry\n  ];\n  var formatAdapterArgs = (connector) => (args) => args.filter((arg) => arg != null).map((arg) => {\n    if (typeof arg === \"function\") return arg(connector);\n    if (typeof arg === \"string\") return [\n      (entry) => {\n        if (entry[0] != null) {\n          try {\n            entry[0].appendChild(entry[1].createTextNode(arg));\n          } catch (e) {\n            entry[0].nodeValue = arg;\n          }\n        }\n        return entry;\n      }\n    ];\n    return arg;\n  });\n  var getElement = (query, container) => () => {\n    const node = container.querySelector(query);\n    return node == null ? null : [node, node.ownerDocument];\n  };\n  var render = (lookup, ...tasks) => () => {\n    const target = lookup();\n    return target == null ? target : tasks.map((task) => task[0]).reduce((node, task) => task(node), target);\n  };\n  var prepend = (branch) => branch(prependNodeConnector);\n  var setAttr = (key, value) => [\n    value === void 0 ? (entry) => {\n      entry[0].removeAttribute(key);\n      return entry;\n    } : typeof value === \"function\" ? (entry) => {\n      entry[0].setAttribute(key, value(entry[0].getAttribute(key)));\n      return entry;\n    } : (entry) => {\n      entry[0].setAttribute(key, value);\n      return entry;\n    }\n  ];\n  var text = createDOMAdapter(\"\", textNodeFactory, noNodeConnector, formatAdapterArgs);\n  var div = createDOMAdapter(\"div\", htmlNodeFactory, appendNodeConnector, formatAdapterArgs);\n  var h2 = createDOMAdapter(\"h2\", htmlNodeFactory, appendNodeConnector, formatAdapterArgs);\n  var id = (value) => setAttr(\"id\", value);\n\n  // myApp.ts\n  var mainView = div(\n    id(\"main\"),\n    h2(text(\"Hello, World!\"))\n  );\n  var renderApp = render(\n    getElement(\"body\", document),\n    prepend(mainView)\n  );\n  renderApp();\n})();\n"],
  "mappings": "OAAC,IAAM,CAEL,IAAIA,EAAmB,CAACC,EAASC,EAASC,EAAWC,IAAW,IAAIC,IAAS,CAC3E,IAAMC,EAAQF,EAAOD,CAAS,EAAEE,CAAI,EAAE,IAAKE,GAAUA,EAAM,CAAC,CAAC,EACvDC,EAASC,GAAQH,EAAM,OAAO,CAACI,EAAMC,IAASA,EAAKD,CAAI,EAAGR,EAAQO,EAAKR,CAAO,CAAC,EACrF,OAAQW,GAAYA,EAAQJ,CAAK,CACnC,EACIK,EAAkB,CAACJ,EAAKK,IAAM,CAACL,EAAI,eAAe,EAAE,EAAGA,CAAG,EAC1DM,EAAkB,CAACN,EAAKR,IAAY,CAACQ,EAAI,cAAcR,CAAO,EAAGQ,CAAG,EACpEO,EAAuBC,GAAW,CACnCV,IACCA,EAAM,CAAC,EAAE,YAAYU,EAAOV,EAAM,CAAC,CAAC,EAAE,CAAC,CAAC,EACjCA,EAEX,EACIW,EAAwBD,GAAW,CACpCV,IACCA,EAAM,CAAC,EAAE,QAAQU,EAAOV,EAAM,CAAC,CAAC,EAAE,CAAC,CAAC,EAC7BA,EAEX,EACIY,EAAmBL,GAAM,CAC1BP,GAAUA,CACb,EACIa,EAAqBjB,GAAeE,GAASA,EAAK,OAAQgB,GAAQA,GAAO,IAAI,EAAE,IAAKA,GAClF,OAAOA,GAAQ,WAAmBA,EAAIlB,CAAS,EAC/C,OAAOkB,GAAQ,SAAiB,CACjCd,GAAU,CACT,GAAIA,EAAM,CAAC,GAAK,KACd,GAAI,CACFA,EAAM,CAAC,EAAE,YAAYA,EAAM,CAAC,EAAE,eAAec,CAAG,CAAC,CACnD,OAASC,EAAG,CACVf,EAAM,CAAC,EAAE,UAAYc,CACvB,CAEF,OAAOd,CACT,CACF,EACOc,CACR,EACGE,EAAa,CAACC,EAAOC,IAAc,IAAM,CAC3C,IAAMf,EAAOe,EAAU,cAAcD,CAAK,EAC1C,OAAOd,GAAQ,KAAO,KAAO,CAACA,EAAMA,EAAK,aAAa,CACxD,EACIgB,EAAS,CAACC,KAAWrB,IAAU,IAAM,CACvC,IAAMsB,EAASD,EAAO,EACtB,OAAOC,GAAU,KAAOA,EAAStB,EAAM,IAAKK,GAASA,EAAK,CAAC,CAAC,EAAE,OAAO,CAACD,EAAMC,IAASA,EAAKD,CAAI,EAAGkB,CAAM,CACzG,EACIC,EAAWC,GAAWA,EAAOZ,CAAoB,EACjDa,EAAU,CAACC,EAAKC,IAAU,CAC5BA,IAAU,OAAU1B,IAClBA,EAAM,CAAC,EAAE,gBAAgByB,CAAG,EACrBzB,GACL,OAAO0B,GAAU,WAAc1B,IACjCA,EAAM,CAAC,EAAE,aAAayB,EAAKC,EAAM1B,EAAM,CAAC,EAAE,aAAayB,CAAG,CAAC,CAAC,EACrDzB,GACJA,IACHA,EAAM,CAAC,EAAE,aAAayB,EAAKC,CAAK,EACzB1B,EAEX,EACI2B,EAAOlC,EAAiB,GAAIa,EAAiBM,EAAiBC,CAAiB,EAC/Ee,EAAMnC,EAAiB,MAAOe,EAAiBC,EAAqBI,CAAiB,EACrFgB,EAAKpC,EAAiB,KAAMe,EAAiBC,EAAqBI,CAAiB,EACnFiB,EAAMJ,GAAUF,EAAQ,KAAME,CAAK,EAGnCK,EAAWH,EACbE,EAAG,MAAM,EACTD,EAAGF,EAAK,eAAe,CAAC,CAC1B,EACIK,EAAYb,EACdH,EAAW,OAAQ,QAAQ,EAC3BM,EAAQS,CAAQ,CAClB,EACAC,EAAU,CACZ,GAAG",
  "names": ["createDOMAdapter", "tagName", "factory", "connector", "format", "args", "tasks", "entry", "build", "doc", "node", "task", "connect", "textNodeFactory", "_", "htmlNodeFactory", "appendNodeConnector", "filter", "prependNodeConnector", "noNodeConnector", "formatAdapterArgs", "arg", "e", "getElement", "query", "container", "render", "lookup", "target", "prepend", "branch", "setAttr", "key", "value", "text", "div", "h2", "id", "mainView", "renderApp"]
}
